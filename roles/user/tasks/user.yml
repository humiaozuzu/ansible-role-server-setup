---
- name: set root user password
  user: name=root password={{ root_password | password_hash('sha512', salt='sa1t') }}
  when: root_password is defined

- name: check if user exists
  stat: path='/home/{{ item.username }}'
  with_items: '{{users}}'
  register: path_stat

#- debug: var=path_stat

- name: create user
  user: name={{ item.username }} state=present groups="{{ item.groups | join(',') }}" shell='/bin/bash' createhome=yes
  with_items: '{{users}}'

- name: create app users sudoer file
  template:
    src: user.j2
    dest: /etc/sudoers.d/{{ item.username }}
    group: root
    owner: root
    mode: 0440
  with_items: '{{app_users}}'
  when: (item.user_sudo_cmds is defined and item.user_sudo_cmds) or (item.group_sudo_cmds is defined and item.group_sudo_cmds)

# TODO: remove sudoer file with related column deleted

- name: upload authorized key
  authorized_key: user="{{item.0.username}}" key="{{item.1}}"
  with_subelements:
    - '{{ users }}'
    - ssh_keys

- name: copy vimrc
  copy: src=vimrc dest='/home/{{ item.item.username }}/.vimrc'
        owner={{ item.item.username }} group={{ item.item.username }} mode=0644
  with_items: '{{path_stat.results}}'
  when: item.stat.exists == false
  no_log: yes

- name: copy bashrc
  copy: src=bashrc dest='/home/{{ item.item.username }}/.bashrc'
        owner={{ item.item.username }} group={{ item.item.username }} mode=0644
  with_items: '{{path_stat.results}}'
  when: item.stat.exists == false
  no_log: yes
